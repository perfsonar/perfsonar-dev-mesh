# At the top level are elements specific to the overall Mesh. This includes a
# description of the 'mesh', the admins for the mesh, the organizations
# involved in the mesh, and the tests that the meshes perform.

# A human-readable description of the overall mesh
description      Staging Testbed

# The overall mesh administrators (i.e. who one should contact if problems are
# seen with the mesh, etc).
<administrator>
  name       Dan Doyle
  email      xxx
</administrator>

<administrator>
  name       Michael Johnson
  email      xxx
</administrator>

<administrator>
  name       Andy Lake
  email      xxx
</administrator>

<administrator>
  name       Mark Feit
  email      xxx
</administrator>   

###
# Central measurement archive
<measurement_archive>
   type        perfsonarbuoy/bwctl
   read_url    https://perfsonar-stage-ma.grnoc.iu.edu/esmond/perfsonar/archive/
   write_url   https://perfsonar-stage-ma.grnoc.iu.edu/esmond/perfsonar/archive/
</measurement_archive>
<measurement_archive>
   type        perfsonarbuoy/owamp
   read_url    https://perfsonar-stage-ma.grnoc.iu.edu/esmond/perfsonar/archive/
   write_url   https://perfsonar-stage-ma.grnoc.iu.edu/esmond/perfsonar/archive/
</measurement_archive>
<measurement_archive>
   type        traceroute
   read_url    https://perfsonar-stage-ma.grnoc.iu.edu/esmond/perfsonar/archive/
   write_url   https://perfsonar-stage-ma.grnoc.iu.edu/esmond/perfsonar/archive/
</measurement_archive>
<measurement_archive>
   type        pinger
   read_url    https://perfsonar-stage-ma.grnoc.iu.edu/esmond/perfsonar/archive/
   write_url   https://perfsonar-stage-ma.grnoc.iu.edu/esmond/perfsonar/archive/
</measurement_archive>
  
  
##
# The list of test hosts
<organization>
  # A human-readable description of the organization
  description    GlobalNOC

  # The administrators for the organization (i.e. who one should contact if
  # problems are seen with individual sites/hosts in the mesh.
  <administrator>
    name    Dan Doyle
    email   xxx
  </administrator>

  <administrator>
    name    Michael Johnson
    email   xxx
  </administrator>


  # There can be one or more 'site' blocks. Each 'site' block corresponds to a
  # logical site in the organization which may contain one or more hosts.
  # Elements in the 'site' block apply to all the 'host' blocks contained
  # within them, and inherit the properties from the 'organization'.
  <site>
    # There can be one or more 'host' blocks. Each 'host' block corresponds to
    # a single host at a site.
    <host>
      # An optional human-readable description of the host
      description    perfsonar-stage1.grnoc (EL7, 4.0, testpoint)
      address        perfsonar-stage1.grnoc.iu.edu
    </host>
    <host>
      # An optional human-readable description of the host
      description    perfsonar-stage2.grnoc (EL7, 4.0, toolkit)
      address        perfsonar-stage2.grnoc.iu.edu
    </host>

  </site>

</organization>

<organization>
  description    ESnet

  <administrator>
    name    Andy Lake 
    email   xxx
  </administrator>

  <site>
    <host>
      description  test-pt1.es.net (EL7, 4.0)
      address      test-pt1.es.net
      address      test-owamp1.es.net
    </host>

  </site>

</organization>

<organization>
  description    CARNet

  <administrator>
    name    Valentin Vidic
    email   xxx
  </administrator>

  <site>
    <host>
      description  pstest.geant.carnet.hr (Debian8, 4.0)
      address      pstest.geant.carnet.hr
    </host>
  </site>
</organization>

# mj82 04/09/2018: Temporarily commenting out I2/Geant as we don't have nodes from them yet

<organization>
  description    Internet2

  <administrator>
    name    Mark Feit
    email   xxx
  </administrator>

  <site>
    <host>
      description  tb-el7-staging @ Internet2 (EL7, 4.x)
      address      tb-el7-staging.ps.dev.internet2.edu
    </host>
  </site>

</organization>



<organization>
  description    GEANT

  <administrator>
    name    Ivan Garnizov
    email   xxx
  </administrator>

  # Non-default network interface
  <site>
    <host>
      description  sophia-bg.rrze.uni-erlangen.de (U16, 4.x)
      <address>
            address             sophia-bg.rrze.uni-erlangen.de
            #bind_address        sophia-bg.rrze.uni-erlangen.de
            #lead_bind_address   sophia-bg.rrze.uni-erlangen.de
      </address>
    </host>
  </site>


</organization>

#
#<organization>
#  description    UMich
#
#  <administrator>
#    name    John Simpkins
#    email   xxx
#  </administrator>
#
#  # send all results back to the ps-test.ctc machine
#  <site>
#    # No working machines at this time.
#  </site>
#
#</organization>
#


# There can be one or more test_spec blocks. Each test_spec block represents a
# test specification, i.e. a test type, along with the parameters for the test.
# The test_spec's *must* have an 'id' field which gets used later to identify
# them.
<test_spec iperf3_tcp_test_v4>
  type              perfsonarbuoy/bwctl   # Perform a bwctl test (i.e. achievable bandwidth)
  tool              bwctl/iperf3          # Use 'iperf3' to do the bandwidh test
  protocol          tcp                   # Run a TCP bandwidth test
  interval          14400                 # Run the test every 4 hours
  duration          20                    # Perform a 20 second test
  force_bidirectional 1                   # do bidirectional test
  random_start_percentage 25              # randomize start time
  ipv4_only         1
</test_spec>

<test_spec iperf3_tcp_test_v6>
  type              perfsonarbuoy/bwctl   # Perform a bwctl test (i.e. achievable bandwidth)
  tool              bwctl/iperf3          # Use 'iperf3' to do the bandwidh test
  protocol          tcp                   # Run a TCP bandwidth test
  interval          14400                 # Run the test every 4 hours
  duration          10                    # Perform a 20 second test
  force_bidirectional 1                   # do bidirectional test
  random_start_percentage 25              # randomize start time
  ipv6_only         1
</test_spec>

<test_spec iperf3_udp_test_v4>
   type              perfsonarbuoy/bwctl
   tool              bwctl/iperf3
   protocol          udp                  # Run a UDP bandwidth test
   interval          14400                # Run the test every 4 hours
   duration          10                   # Perform a 10 second test
   udp_bandwidth     50000000             # Perform a 50Mbps test
   force_bidirectional 1                  # do bidirectional test
   random_start_percentage 25             # randomize start time
   ipv4_only         1
   window_size       1024000              # increasing window size helps reduce iperf3 loss
</test_spec>

<test_spec iperf3_udp_test_v6>
   type              perfsonarbuoy/bwctl
   tool              bwctl/iperf3
   protocol          udp                  # Run a UDP bandwidth test
   interval          14400                # Run the test every 4 hours
   duration          10                   # Perform a 10 second test
   udp_bandwidth     50000000             # Perform a 50Mbps test
   force_bidirectional 1                  # do bidirectional test
   random_start_percentage 25             # randomize start time
   ipv6_only         1
   window_size       1024000              # increasing window size helps reduce iperf3 loss
</test_spec>

<test_spec nuttcp_udp_test_v4>
   type              perfsonarbuoy/bwctl
   tool              bwctl/nuttcp
   protocol          udp                  # Run a UDP bandwidth test
   interval          14400                # Run the test every 4 hours
   duration          10                   # Perform a 10 second test
   udp_bandwidth     50000000             # Perform a 50Mbps test
   force_bidirectional 1                  # do bidirectional test
   random_start_percentage 25             # randomize start time
   ipv4_only         1
   report_interval   1                    # report every 1 second
</test_spec>

<test_spec nuttcp_udp_test_v6>
   type              perfsonarbuoy/bwctl
   tool              bwctl/nuttcp
   protocol          udp                  # Run a UDP bandwidth test
   interval          14400                # Run the test every 4 hours
   duration          10                   # Perform a 10 second test
   udp_bandwidth     50000000             # Perform a 50Mbps test
   force_bidirectional 1                  # do bidirectional test
   random_start_percentage 25             # randomize start time
   ipv6_only         1
   report_interval   1                    # report every 1 second
</test_spec>

<test_spec owamp_test_v4>
   # Define a test spec for doing jitter, loss and latency testing

   type              perfsonarbuoy/owamp  # Perform a constant low-bandwidth OWAMP test
   packet_interval   0.1                  # Send 100 packets every second (i.e. pause 0.01 seconds between each packet)
   loss_threshold    10                   # Wait no more than 10 seconds for a response
   session_count     18000                # Refresh the test every half hour (once every 18000 packets)
   sample_count      600                  # Send results back every 30 seconds (once every 300 packets)
   packet_padding    0                    # The size of the packets (not including the IP/UDP headers)
   bucket_width      0.001                # The granularity of the measurements
#   force_bidirectional 1                  # do bidirectional test
   ipv4_only         1
</test_spec>

<test_spec owamp_test_v6>
   # Define a test spec for doing jitter, loss and latency testing

   type              perfsonarbuoy/owamp  # Perform a constant low-bandwidth OWAMP test
   packet_interval   0.1                  # Send 100 packets every second (i.e. pause 0.01 seconds between each packet)
   loss_threshold    10                   # Wait no more than 10 seconds for a response
   session_count     18000                # Refresh the test every half hour (once every 18000 packets)
   sample_count      600                  # Send results back every 30 seconds (once every 300 packets)
   packet_padding    0                    # The size of the packets (not including the IP/UDP headers)
   bucket_width      0.001                # The granularity of the measurements
#   force_bidirectional 1                  # do bidirectional test
   ipv6_only         1
</test_spec>

<test_spec traceroute_test_v4>
   # Define a test spec for running traceroute tests every 10 minutes

   type              traceroute           # Perform a traceroute test
   tool              traceroute
   test_interval     600                  # Run the test every 5 minutes
   timeout           30                   # Wait 30 seconds 
   waittime          5                    # Number of seconds to wait for a response before assuming its lost
   ipv4_only         1
</test_spec>

<test_spec traceroute_test_v6>
   # Define a test spec for running traceroute tests every 10 minutes

   type              traceroute           # Perform a traceroute test
   tool              traceroute
   test_interval     600                  # Run the test every 5 minutes
   timeout           30                   # Wait 30 seconds 
   waittime          5                    # Number of seconds to wait for a response before assuming its lost
   ipv6_only         1
</test_spec>

<test_spec ping_test_v4>
  type              pinger
  packet_interval   1                   # Send 1 packet every second
  test_interval     900                 # Run every 15 minutes
  packet_size       1000                # 1000 bytes
  packet_count      10                  # 10 packets
  force_bidirectional 1
  ipv4_only         1
</test_spec>

<test_spec ping_test_v6>
  type              pinger
  packet_interval   1                   # Send 1 packet every second
  test_interval     900                 # Run every 15 minutes
  packet_size       1000                # 1000 bytes
  packet_count      10                  # 10 packets
  force_bidirectional 1
  ipv6_only         1
</test_spec>


# There can be one or more 'group' blocks. These contain a list of hosts that
# will be used in a test. 
<group v4_hosts_owamp>
  type              mesh

  member            perfsonar-stage1.grnoc.iu.edu
  member            perfsonar-stage2.grnoc.iu.edu
  member            tb-el7-staging.ps.dev.internet2.edu
  member            test-owamp1.es.net
  member            pstest.geant.carnet.hr
  member            sophia-bg.rrze.uni-erlangen.de
</group>


<group v4_hosts_iperf3.TCP>
  type              mesh

  member            perfsonar-stage1.grnoc.iu.edu
  member            perfsonar-stage2.grnoc.iu.edu
  member            test-pt1.es.net
  member            pstest.geant.carnet.hr
  member            sophia-bg.rrze.uni-erlangen.de
</group>

<group v4_hosts_traceroute>
  type              mesh

  member            perfsonar-stage1.grnoc.iu.edu
  member            perfsonar-stage2.grnoc.iu.edu
  member            tb-el7-staging.ps.dev.internet2.edu
  member            test-pt1.es.net
  member            pstest.geant.carnet.hr
  member            sophia-bg.rrze.uni-erlangen.de
</group>

<group v4_hosts_ping>
  type              mesh

  member            perfsonar-stage1.grnoc.iu.edu
  member            perfsonar-stage2.grnoc.iu.edu
  member            tb-el7-staging.ps.dev.internet2.edu
  member            test-pt1.es.net
  member            pstest.geant.carnet.hr
  member            sophia-bg.rrze.uni-erlangen.de
</group>

# I2 hosts excluded
<group v4_hosts_nuttcp.UDP>
  type              mesh

  member            perfsonar-stage1.grnoc.iu.edu
  member            perfsonar-stage2.grnoc.iu.edu
  member            test-pt1.es.net
  member            pstest.geant.carnet.hr
</group>


# I2 hosts excluded
<group v4_hosts_iperf3.UDP>
  type              mesh

  member            perfsonar-stage1.grnoc.iu.edu
  member            perfsonar-stage2.grnoc.iu.edu
  member            test-pt1.es.net
  member            pstest.geant.carnet.hr
</group>

<group v6_hosts_iperf3.TCP>
  type              mesh

  member            perfsonar-stage1.grnoc.iu.edu
  member            perfsonar-stage2.grnoc.iu.edu
  member            test-pt1.es.net
  member            sophia-bg.rrze.uni-erlangen.de
</group>

<group v6_hosts_owamp>
  type              mesh

  member            perfsonar-stage1.grnoc.iu.edu
  member            perfsonar-stage2.grnoc.iu.edu
  member            test-owamp1.es.net
  member            sophia-bg.rrze.uni-erlangen.de
</group>


# There can be one or more 'test' blocks that represent tests that the mesh
# should be performing. These combine the group elements defined above with
# test parameters defined above.
<test>
  description       iperf3 TCP Test Between Testbeds
  group             v4_hosts_iperf3.TCP
  test_spec         iperf3_tcp_test_v4
</test>

<test>
  description       iperf3 UDP Test Between Testbeds
  group             v4_hosts_iperf3.UDP
  test_spec         iperf3_udp_test_v4
</test>

<test>
  description       nuttcp UDP Test Between pScheduler Hosts
  group             v4_hosts_nuttcp.UDP
  test_spec         nuttcp_udp_test_v4
</test>


<test>
  description       Traceroute Between Testbeds
  group             v4_hosts_traceroute
  test_spec         traceroute_test_v4
</test>

<test>
  description       Powstream Between Testbeds
  group             v4_hosts_owamp
  test_spec         owamp_test_v4
</test>

<test>
  description       Ping Between Testbeds
  group             v4_hosts_ping
  test_spec         ping_test_v4
</test>
